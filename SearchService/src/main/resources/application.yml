server:
  port: ${PORT:8080}

spring:
  application:
    name: SearchService
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      maximum-pool-size: ${HIKARI_MAX_POOL_SIZE:10}
      minimum-idle: ${HIKARI_MINIMUM_IDLE:10}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}

feign:
  client:
    urls:
      ReviewService: ${FEIGN_URL_REVIEWSERVICE:}
      UserService: ${FEIGN_URL_USERSERVICE:}
      ConstructorService: ${FEIGN_URL_CONSTRUCTORSERVICE:}

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

openapi:
  service:
    title: ${spring.application.name}
    version: 1.0.0
    url: ${OPENAPI_URL}
springdoc:
  api-docs:
    path: /api/searchservice/api-docs
  swagger-ui:
    path: /api/searchservice/swagger-ui

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL}
    healthcheck:
      enabled: true
